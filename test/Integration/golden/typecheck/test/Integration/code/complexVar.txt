(
    [ /Complex[ /N : âˆ€/Data/Primitive/Number ]( Value /a -> TVVar /N )( Value /b -> TVVar /N )
    , /real
        ( Value /c -> /Complex[ /N=~Number ]
            ( /a=TVVar /N
            , /b=TVVar /N
            ) = /Complex( Value /a -> ~Number )( Value /b -> ~Number )
        ) -> TVArg /a = Value /a
    , /ContextIn( Value /value -> /main = Value /main )( Value /io -> /Catln/IO ) ->
        ( /Catln/exit
            ( /val=/Data/Primitive/Integer
            , /this=/Catln/IO
            ) | /Catln/IO
        ) = /Catln/exit
        ( Value /val -> /Data/Primitive/Integer = /real
            ( Value /c -> /Complex[ /N=/Data/Primitive/Integer ]
                ( /a=TVVar /N
                , /b=TVVar /N
                ) = /Complex
                ( Value /a -> /Data/Primitive/Integer = CInt 0 )
                ( Value /b -> /Data/Primitive/Integer = CInt 7 )
            )
        )( Value /this -> TVArg /io = Value /io )
    ]
,
    [ CGType
    , CGType
    , CGType
    ]
,
    [ /Catln/#md
        ( Value /text -> /Data/String = CStr "Tests data classes and matching values in functions (c=Type(...)) with type vars" )
    ]
)