Prgm
    { prgmObjMap =
        [ /Complex( Value /a -> ∀/Data/Primitive/Number )( Value /b -> ∀/Data/Primitive/Number )
        , /real
            ( Value /c -> /Complex
                ( /a=~Number
                , /b=~Number
                ) = /Complex( Value /a -> ~Number )( Value /b -> ~Number )
            ) -> TVArg /a = Value /a
        , /ContextIn( Value /value -> /main = Value /main )( Value /io -> /Catln/IO ) ->
            ( /Catln/exit
                ( /val=/Data/Primitive/Integer
                , /this=/Catln/IO
                ) | /Catln/IO
            ) = /Catln/exit
            ( Value /val -> /Data/Primitive/Integer = /real
                ( Value /c -> /Complex
                    ( /a=/Data/Primitive/Integer
                    , /b=/Data/Primitive/Integer
                    ) = /Complex
                    ( Value /a -> /Data/Primitive/Integer = CInt 0 )
                    ( Value /b -> /Data/Primitive/Integer = CInt 7 )
                )
            )( Value /this -> TVArg /io = Value /io )
        ]
    , prgmCG =
        [ CGType
        , CGType
        , CGType
        ]
    , prgmAnnots =
        [ /Catln/#md
            ( Value /text -> /Data/String = CStr "Tests data classes and matching values in functions (c=Type(...)) without type vars" )
        ]
    }