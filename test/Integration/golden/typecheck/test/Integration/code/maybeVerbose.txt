(
    [ /Just[ /T : TopType ]( Value /val -> TVVar /T )
    , Value /Nothing
    , /defInt
        ( Value /x -> /Just( /val=/Data/Primitive/Integer ) = /Just( Value /val -> /Data/Primitive/Integer ) ) -> TVArg /val = Value /val
    , /defInt( Value /x -> /Nothing = Value /Nothing ) -> /Data/Primitive/Integer = CInt 0
    , /ContextIn( Value /value -> /main = Value /main )( Value /io -> /Catln/IO ) ->
        ( /Catln/exit
            ( /val=/Data/Primitive/Integer
            , /this=/Catln/IO
            ) | /Catln/IO
        ) = /Catln/exit
        ( Value /val -> /Data/Primitive/Integer = /defInt
            ( Value /x -> /Just( /val=/Data/Primitive/Integer ) = /Just
                ( Value /val -> /Data/Primitive/Integer = CInt 0 )
            )
        )( Value /this -> TVArg /io = Value /io )
    ]
,
    [ CGType
    , CGType
    , CGType
    , CGType
    , CGClass
        ( True
        , /Maybe
        ,
            [ /Just[ /T=TopType ]( /val=TVVar /T )
            , /Nothing
            ]
        , Just ""
        )
    ]
,
    [ /Catln/#md
        ( Value /text -> /Data/String = CStr "Tests a simple data structure with a sum type" )
    ]
)