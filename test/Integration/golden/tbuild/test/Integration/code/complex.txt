Prgm
    { prgmObjMap =
        [ /Complex( EAppArg Value /a -> ∀/Data/Primitive/Number )( EAppArg Value /b -> ∀/Data/Primitive/Number )
        , /real
            ( EAppArg Value /c -> /Complex
                ( /a=~Number
                , /b=~Number
                ) = /Complex( EAppArg Value /a -> ~Number )( EAppArg Value /b -> ~Number )
            ) -> TVArg /a = ( Value /a ↦ TVArg /a )
        , /ContextIn( EAppArg Value /value -> /main = Value /main )( EAppArg Value /io -> /Catln/IO ) ->
            ( /Catln/exit
                ( /val=/Data/Primitive/Integer
                , /this=/Catln/IO
                ) | /Catln/IO
            ) = /Catln/exit
            ( EAppArg Value /val -> /Data/Primitive/Integer =
                ( /real
                    ( EAppArg Value /c -> /Complex
                        ( /a=/Data/Primitive/Integer
                        , /b=/Data/Primitive/Integer
                        ) = /Complex
                        ( EAppArg Value /a -> /Data/Primitive/Integer = 0 )
                        ( EAppArg Value /b -> /Data/Primitive/Integer = 7 )
                    ) ↦ /Data/Primitive/Integer
                )
            )
            ( EAppArg Value /this -> TVArg /io = ( Value /io ↦ TVArg /io ) )
        ]
    , prgmCG =
        [ CGType
        , CGType
        , CGType
        ]
    , prgmAnnots =
        [ /Catln/#md
            ( EAppArg Value /text -> /Data/String = "Tests data classes and matching values in functions (c=Type(...)) without type vars" )
        ]
    }